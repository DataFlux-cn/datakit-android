apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

def versionNameStr="1.0.0-beta01"

android {
    compileSdk 34
//    ndkVersion '21.3.6528147'
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 34

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                cppFlags ""
                abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
            }
        }
        buildConfigField("String", "VERSION_NAME", "\"$versionNameStr\"")

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    namespace 'com.ft.sdk.nativelib'
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}


afterEvaluate {
    publishing {
        publications {
            mavenAar(MavenPublication) {
                groupId 'com.cloudcare.ft.mobile.sdk.tracker.agent'
                artifactId 'ft-native'
                version versionNameStr
                artifact("$buildDir/outputs/aar/ft-native-release.aar"){
                    builtBy assemble
                }
            }
        }
        repositories {
            maven {

                def releasesRepoUrl = "$maven_publish_url/maven-releases"
                def snapshotsRepoUrl = "$maven_publish_url/maven-snapshots"
                url = versionNameStr.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

                credentials {
                    username = getDefaultProperties().get("LDAP_ACCOUNT")
                    password = getDefaultProperties().get("LDAP_PWD")
                }
            }


        }
    }
}


task generateAarAndPublish{
    dependsOn 'clean'
    dependsOn 'publish'
}
