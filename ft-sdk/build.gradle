apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

//发布 snapshot 版本号末尾追加 "-SNAPSHOT"
def versionNameStr = "1.3.8-beta01"

android {
    compileSdkVersion 31


    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "FT_SDK_VERSION", "\"${versionNameStr}\"")

    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            testCoverageEnabled = true
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    testImplementation 'junit:junit:4.13'
    testImplementation 'org.robolectric:android-all:10-robolectric-5803371'
    testImplementation 'org.robolectric:robolectric:4.7.2'
    testImplementation 'org.robolectric:shadows-httpclient:3.3.2'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.7'
    testImplementation 'com.google.mockwebserver:mockwebserver:20130706'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation project(':ft-test')
    androidTestImplementation 'com.squareup.okhttp3:okhttp:4.5.0'
    androidTestImplementation 'com.google.mockwebserver:mockwebserver:20130706'
    androidTestImplementation 'org.powermock:powermock-module-junit4:2.0.7'
    implementation 'com.google.android.material:material:1.1.0'
    compileOnly 'com.squareup.okhttp3:okhttp:4.5.0'
    compileOnly project(":ft-native")
}


task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

afterEvaluate {
    publishing {
        publications {
            mavenAar(MavenPublication) {
                groupId 'com.cloudcare.ft.mobile.sdk.tracker.agent'
                artifactId 'ft-sdk'
                version versionNameStr
                artifact(sourceJar)
                artifact("$buildDir/outputs/aar/ft-sdk-release.aar") {
                    builtBy assemble
                }
            }
        }
        repositories {
            maven {

                def releasesRepoUrl = "$maven_publish_url/maven-releases"
                def snapshotsRepoUrl = "$maven_publish_url/maven-snapshots"
                url = versionNameStr.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username = getDefaultProperties().get("LDAP_ACCOUNT")
                    password = getDefaultProperties().get("LDAP_PWD")
                }
            }


        }
    }
}


task generateAarAndPublish {
    dependsOn 'clean'
    dependsOn 'publish'
}

task aar {
    dependsOn 'assemble'

}


