// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        maven_publish_url = 'https://mvnrepo.jiagouyun.com/repository'
        getDefaultProperties = this.&getDefaultProperties
    }

    Properties properties = new Properties()
    def localPropertiesPath = 'local.properties'
    if (project.rootProject.file(localPropertiesPath).exists()) {
        properties.load(project.rootProject.file(localPropertiesPath).newDataInputStream())
    }

    def appIdString = properties.getProperty("RUM_APP_ID")
    def datakitRUMUrl = properties.getProperty("ACCESS_SERVER_URL")
    def datakitDCAUrl = properties.getProperty("SOURCE_MAP_URL")
    def trackId = properties.getProperty("TRACK_ID")
    def traceUrl = properties.getProperty("TRACE_URL")

    ext.ft_env = [
            'rumAppid'  : appIdString,
            'datakitRUMUrl': datakitRUMUrl,
            'datakitDCAUrl': datakitDCAUrl,
            'trackId'   : trackId,
            'traceUrl'  : traceUrl,
            'prodTestEnv'  : 'gray',
            'prodPublishEnv'  : 'prod'
    ]
    repositories {
        google()
//        jcenter()
//        mavenLocal()
        maven {
            url "${maven_publish_url}/maven-releases"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }

        flatDir dirs: "ft-plugin/build/libs"

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.2.2'
        classpath 'com.cloudcare.ft.mobile.sdk.tracker.plugin:ft-plugin:1.1.1-beta02'
//        classpath 'com.guardsquare:proguard-gradle:7.1.0'
//        classpath files('ft-plugin/build/libs/ft-plugin-1.1.1-beta02.jar')
        classpath "com.github.gmazzo:gradle-buildconfig-plugin:2.0.2"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        mavenLocal()
        maven {
            url "${maven_publish_url}/maven-releases"
        }
    }
    configurations.all {
        resolutionStrategy {
            force("org.objenesis:objenesis:2.6")
        }
    }
}


def getDefaultProperties() {
    def userName = System.getProperty("LDAP_ACCOUNT")
    def password = System.getProperty("LDAP_PWD")

    Properties properties = new Properties()
    if (userName != null && password != null) {
        properties.setProperty("LDAP_ACCOUNT", userName)
        properties.setProperty("LDAP_PWD", password)
    } else {
        def file = project.rootProject.file('local.properties')
        if (file.exists()) {
            properties.load(file.newDataInputStream())
        }
    }
    return properties
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
